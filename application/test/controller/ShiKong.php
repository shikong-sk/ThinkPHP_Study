<?php
namespace app\test\controller;

use think\Controller;
use think\facade\Env;

class ShiKong extends Controller {

    protected function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        echo '';

    }

    public function hello($who=''){
        return "欢迎  $who";
    }

    public function test(){
        $env = array(
            "root_path    [应用根目录]" => Env::get('root_path'),       // 应用根目录
            "app_path     [应用目录]" => Env::get('app_path'),         // 应用目录
            "think_path   [框架目录]" => Env::get('think_path'),     // 框架目录
            "config_path  [配置目录]" => Env::get('config_path'),   // 配置目录
            "extend_path  [扩展目录]" => Env::get('extend_path'),   // 扩展目录
            "vendor_path  [composer 目录]" => Env::get('vendor_path'),   // composer 目录
            "runtime_path [运行缓存目录]" => Env::get('runtime_path'), // 运行缓存目录
            "route_path   [路由目录]" => Env::get('route_path'),     // 路由目录
            "module_path  [当前模块目录]" => Env::get('module_path'),   // 当前模块目录
        );
        foreach ($env as $k=>$v)
        {
            echo "$k => $v <br>";
        }
        return ;
    }

    public function testJson(){
        $env = array(
            "root_path    [应用根目录]" => Env::get('root_path'),       // 应用根目录
            "app_path     [应用目录]" => Env::get('app_path'),         // 应用目录
            "think_path   [框架目录]" => Env::get('think_path'),     // 框架目录
            "config_path  [配置目录]" => Env::get('config_path'),   // 配置目录
            "extend_path  [扩展目录]" => Env::get('extend_path'),   // 扩展目录
            "vendor_path  [composer 目录]" => Env::get('vendor_path'),   // composer 目录
            "runtime_path [运行缓存目录]" => Env::get('runtime_path'), // 运行缓存目录
            "route_path   [路由目录]" => Env::get('route_path'),     // 路由目录
            "module_path  [当前模块目录]" => Env::get('module_path'),   // 当前模块目录
        );

        return json($env);
    }

    public function view(){
        return view();
    }
}